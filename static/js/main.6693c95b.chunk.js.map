{"version":3,"sources":["Card.js","fetchdata.js","Chart.js","CountryPicker.js","App.js","index.js","image/image.png"],"names":["useStyles","makeStyles","theme","main","margin","display","justifyContent","alignItems","card","breakpoints","down","infected","borderBottom","Cards","data","confirmed","deaths","recovered","lastUpdate","classes","className","Grid","container","spacing","justify","style","item","component","Card","xs","md","CardContent","Typography","color","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","res","console","log","fetchDailyData","modifiedData","map","singleData","total","reportDate","fetchCountry","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialData","fetchApi","barChart","labels","datasets","label","backgroundColor","options","legend","title","text","lineChart","borderColor","fill","width","marginBottom","CountryPicker","props","setCountries","FormControl","NativeSelect","defaultValue","onChange","e","handleCountryChange","target","i","key","App","state","fetchCountryData","setState","this","src","image","alt","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6693c95b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    margin: '50px 0',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  card: {\r\n    margin: '0 2%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: '2% 0',\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      margin: '2% 0',\r\n    },\r\n  },\r\n  infected: {\r\n    borderBottom: '10px solid rgba(0, 0, 255, 0.5)',\r\n  },\r\n}));\r\n\r\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\r\n  const classes = useStyles();\r\n\r\n  if (!confirmed) {\r\n    return 'loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <Grid container spacing={3} justify='center'>\r\n        <Grid\r\n          style={{ borderBottom: '10px solid rgba(0, 0, 255, 0.5)' }}\r\n          className={classes.card}\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}>\r\n          <CardContent>\r\n            <Typography color='textSecondary'>Infected</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=','\r\n              />\r\n            </Typography>\r\n            <Typography color='textSecondary'>\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant='body2' color='textSecondary'>\r\n              Number of Infected from Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          style={{ borderBottom: '10px solid rgba(0, 255, 0, 0.5)' }}\r\n          className={classes.card}\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}>\r\n          <CardContent>\r\n            <Typography color='textSecondary'>Deaths</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=','\r\n              />\r\n            </Typography>\r\n            <Typography color='textSecondary'>\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>{' '}\r\n            <Typography variant='body2' color='textSecondary'>\r\n              Number of deaths from Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          style={{ borderBottom: '10px solid rgba(255, 0, 0, 0.5)' }}\r\n          className={classes.card}\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}>\r\n          <CardContent>\r\n            <Typography color='textSecondary'>Recovered</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=','\r\n              />\r\n            </Typography>\r\n            <Typography color='textSecondary'>\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>{' '}\r\n            <Typography variant='body2' color='textSecondary'>\r\n              Number of recovered from Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","import axios from 'axios';\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changableUrl = url;\r\n  if (country) {\r\n    changableUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const res = await axios.get(changableUrl);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((singleData) => ({\r\n      confirmed: singleData.confirmed.total,\r\n      deaths: singleData.deaths.total,\r\n      reportDate: singleData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountry = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from './fetchdata';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const initialData = await fetchDailyData();\r\n      setDailyData(initialData);\r\n    };\r\n    fetchApi();\r\n  }, []);\r\n\r\n  // bar chart\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [\r\n          {\r\n            label: 'People',\r\n            backgroundColor: [\r\n              'rgba(0, 0, 255, 0.5)',\r\n              'rgba(0, 255, 0, 0.5)',\r\n              'rgba(255, 0, 0, 0.5)',\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  // line chart\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map((data) => data.reportDate),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '85%',\r\n        margin: '0 auto',\r\n      }}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchCountry } from './fetchdata';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  main: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginBottom: '20px',\r\n  },\r\n});\r\n\r\nexport default function CountryPicker(props) {\r\n  const classes = useStyles();\r\n\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const data = await fetchCountry();\r\n      setCountries(data);\r\n    };\r\n    fetchApi();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <FormControl>\r\n        <NativeSelect\r\n          defaultValue=''\r\n          onChange={(e) => props.handleCountryChange(e.target.value)}>\r\n          <option value=''>Global</option>\r\n          {countries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport Cards from './Card';\nimport Chart from './Chart';\nimport { fetchData } from './fetchdata';\nimport CountryPicker from './CountryPicker';\nimport image from './image/image.png';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    data: {},\n    country: '',\n  };\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data: data });\n  }\n  handleCountryChange = async (country) => {\n    const fetchCountryData = await fetchData(country);\n\n    this.setState({ data: fetchCountryData, country });\n  };\n  render() {\n    return (\n      <div className='container'>\n        <img className='covidImage' src={image} alt='Covid-19' />\n        <Cards data={this.state.data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={this.state.data} country={this.state.country} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}